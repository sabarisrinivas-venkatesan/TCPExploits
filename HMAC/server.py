
import socket
import hashlib
import pickle
import sys

def customhash(data,key,source):
    string = data + key + source
    string = hashlib.md5(string.encode())
    for i in range (1,100):
        #print (str(string.hexdigest()),"\n")
        if (i%2 == 0):
            string = hashlib.sha256(str(string.hexdigest()).encode())
        else:
            string = hashlib.sha512(str(string.hexdigest()).encode())

    #print (str(string.hexdigest()))
    return (str(string.hexdigest()))

key = sys.argv[1]
source = sys.argv[2]
s = socket.socket()		
print ("Socket successfully created")
port = 30000			
s.bind(('', port))		
print ("socket binded to %s" %(port))
s.listen(5)	
print ("socket is listening")
while True:
    c, addr = s.accept()	
    message = c.recv(10240)
    msg = pickle.loads(message)
    data = msg["message"]
    code = customhash(data, key, source)
    print ("The recieved Message is: ",data,"\n")
    print ("The recieved hash is: ",msg["HMAC Digest"],"\n")
    print ("The computed hash is: ",code,"\n")
    print ("\n ----- \n")
    if (code == msg["HMAC Digest"]):
        print ("HMAC Verified \n")
    else:
        print ("HMAC Failed \n")
    c.close()
    break
