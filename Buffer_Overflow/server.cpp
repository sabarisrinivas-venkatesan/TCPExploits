#include <sys/socket.h> 
#include <netinet/in.h>
#include <cstdlib> 
#include <iostream> 
#include <unistd.h> 

using namespace std;

int main() {
  int sockfd = socket(AF_INET, SOCK_STREAM, 0);
  if (sockfd == -1) {
    cout << "Failed to create socket. errno: " << errno << endl;
    exit(EXIT_FAILURE);
  }


  sockaddr_in sockaddr;
  sockaddr.sin_family = AF_INET;
  sockaddr.sin_addr.s_addr = INADDR_ANY;
  sockaddr.sin_port = htons(9999); 
  if (bind(sockfd, (struct sockaddr*)&sockaddr, sizeof(sockaddr)) < 0) {
    cout << "Failed to bind to port 9999. errno: " << errno << endl;
    exit(EXIT_FAILURE);
  }


  if (listen(sockfd, 10) < 0) {
    cout << "Failed to listen on socket. errno: " << errno << endl;
    exit(EXIT_FAILURE);
  }


  auto addrlen = sizeof(sockaddr);
  int connection = accept(sockfd, (struct sockaddr*)&sockaddr, (socklen_t*)&addrlen);
  if (connection < 0) {
    cout << "Failed to grab connection. errno: " << errno << endl;
    exit(EXIT_FAILURE);
  }

  char buffer[10];
  auto bytesRead = read(connection, buffer, 100);
  cout <<  buffer << endl;

  // Close the connections
  close(connection);
  close(sockfd);
}
